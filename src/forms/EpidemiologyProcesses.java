/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (c) 2014-2019 Bruno Augusto Nassif Travencolo.
 * All Rights Reserved.
 *
 * This file is part of DyNetVis Project (DyNetVis).
 *
 * How to cite this software:
 *  
@inproceedings{Linhares:2017:DSV:3019612.3019686,
 author = {Linhares, Claudio D. G. and Traven\c{c}olo, Bruno A. N. and Paiva, Jose Gustavo S. and Rocha, Luis E. C.},
 title = {DyNetVis: A System for Visualization of Dynamic Networks},
 booktitle = {Proceedings of the Symposium on Applied Computing},
 series = {SAC '17},
 year = {2017},
 isbn = {978-1-4503-4486-9},
 location = {Marrakech, Morocco},
 pages = {187--194},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/3019612.3019686},
 doi = {10.1145/3019612.3019686},
 acmid = {3019686},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {complex networks, dynamic graph visualization, dynamic networks, recurrent neighbors, temporal activity map},
} 
 *  
 * DyNetVis is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * DyNetVis is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 *
 * This code was developed by members of Lab of Complex Network Visualization at 
 * Federal University of Uberlândia, Brazil - (https://sites.google.com/view/dynetvis/team?authuser=0). 
 * The initial developer of the original code is Claudio D. G. Linhares <claudiodgl@gmail.com>.
 *
 * Contributor(s): Jean R. Ponciano -- jeanrobertop@gmail.com, Luis E. C. Rocha -- luis.rocha@ugent.be, 
 * José Gustavo S. Paiva -- gustavo@ufu.br, Bruno A. N. Travençolo -- travencolo@gmail.com
 *
 * You should have received a copy of the GNU General Public License along 
 * with DyNetVis. If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */


package forms;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author  Claudio Linhares
 */
public class EpidemiologyProcesses extends JDialog {

    boolean epidemiologyRunned = false;
    
    public EpidemiologyProcesses(MainForm f) {
        initComponents();
        setAlwaysOnTop(true);
        frame = f;
        
        
        modelInfection.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e) {
                
                if(e.getItem().toString().equals("SIR"))
                {
                    jLabel20.setEnabled(false);
                    lossImmunityTextField.setEnabled(false);
                    jLabel16.setEnabled(true);
                    trTextField.setEnabled(true);
                }
                else if(e.getItem().toString().equals("SIS"))
                {
                    jLabel20.setEnabled(false);
                    lossImmunityTextField.setEnabled(false);
                    jLabel16.setEnabled(true);
                    trTextField.setEnabled(true);
                }
                else if(e.getItem().toString().equals("SI"))
                {
                    jLabel20.setEnabled(false);
                    lossImmunityTextField.setEnabled(false);
                    jLabel16.setEnabled(false);
                    trTextField.setEnabled(false);
                }
                else if(e.getItem().toString().equals("SIRS"))
                {
                    jLabel20.setEnabled(true);
                    lossImmunityTextField.setEnabled(true);
                    jLabel16.setEnabled(true);
                    trTextField.setEnabled(true);
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EpidemiologyProcessesPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        modelInfection = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        seedTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        trTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        lossImmunityTextField = new javax.swing.JTextField();
        changeNodeOrdering = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        runRandomWalker = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        highlightInfection = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setTitle("Epidemiology Processes");
        setLocationByPlatform(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        EpidemiologyProcessesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        EpidemiologyProcessesPanel.setMaximumSize(null);
        EpidemiologyProcessesPanel.setName(""); // NOI18N
        EpidemiologyProcessesPanel.setLayout(new java.awt.GridLayout(11, 0));

        jLabel19.setText("Infection model");
        EpidemiologyProcessesPanel.add(jLabel19);

        modelInfection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SIR", "SIS", "SI", "SIRS" }));
        modelInfection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelInfectionActionPerformed(evt);
            }
        });
        EpidemiologyProcessesPanel.add(modelInfection);

        jLabel18.setText("Seed to Random");
        EpidemiologyProcessesPanel.add(jLabel18);

        seedTextField.setText("1");
        seedTextField.setPreferredSize(new java.awt.Dimension(40, 20));
        EpidemiologyProcessesPanel.add(seedTextField);

        jLabel17.setText("Probability");
        EpidemiologyProcessesPanel.add(jLabel17);

        pTextField1.setText("0.5");
        pTextField1.setToolTipText("");
        pTextField1.setPreferredSize(new java.awt.Dimension(40, 20));
        pTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pTextField1ActionPerformed(evt);
            }
        });
        EpidemiologyProcessesPanel.add(pTextField1);

        jLabel16.setText("Recovery time");
        EpidemiologyProcessesPanel.add(jLabel16);

        trTextField.setText("10");
        trTextField.setPreferredSize(new java.awt.Dimension(40, 20));
        EpidemiologyProcessesPanel.add(trTextField);

        jLabel20.setText("Loss of immunity");
        jLabel20.setEnabled(false);
        EpidemiologyProcessesPanel.add(jLabel20);

        lossImmunityTextField.setText("0.5");
        lossImmunityTextField.setEnabled(false);
        lossImmunityTextField.setPreferredSize(new java.awt.Dimension(40, 20));
        EpidemiologyProcessesPanel.add(lossImmunityTextField);

        changeNodeOrdering.setText("Change node ordering");
        EpidemiologyProcessesPanel.add(changeNodeOrdering);

        jLabel3.setText(" ");
        EpidemiologyProcessesPanel.add(jLabel3);

        jLabel1.setText(" ");
        EpidemiologyProcessesPanel.add(jLabel1);

        runRandomWalker.setText("Run Epidemiology Processes");
        runRandomWalker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runRandomWalkerActionPerformed(evt);
            }
        });
        EpidemiologyProcessesPanel.add(runRandomWalker);

        jLabel2.setText(" ");
        EpidemiologyProcessesPanel.add(jLabel2);

        highlightInfection.setText("Highlight Infection");
        highlightInfection.setEnabled(false);
        highlightInfection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightInfectionActionPerformed(evt);
            }
        });
        EpidemiologyProcessesPanel.add(highlightInfection);

        jLabel4.setText("Color legend:");
        EpidemiologyProcessesPanel.add(jLabel4);

        jLabel5.setText(" ");
        EpidemiologyProcessesPanel.add(jLabel5);

        jLabel6.setText("<html><font color=\"blue\"><strong><u>S</u>usceptible</strong></font></html>");
        EpidemiologyProcessesPanel.add(jLabel6);

        jLabel7.setText("<html><font color=\"red\"><strong><u>I</u>nfected</strong></font></html>");
        EpidemiologyProcessesPanel.add(jLabel7);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("<html><div style=\"background-color:black\"><font color=\"FDE541\"><strong><u>R</u>ecovered</strong></font></div></html>\n\n");
        jLabel8.setToolTipText("");
        EpidemiologyProcessesPanel.add(jLabel8);

        jLabel9.setText(" ");
        EpidemiologyProcessesPanel.add(jLabel9);

        getContentPane().add(EpidemiologyProcessesPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void runRandomWalkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runRandomWalkerActionPerformed
        if(frame.idAndTimeNodeSelectedEpidemiology == null)
        {
            JOptionPane.showMessageDialog(this,"Please select a node in a specific timestamp first.");
            epidemiologyRunned = false;
            highlightInfection.setEnabled(false);
        }
        else
        {
            String[] nodeSelected = frame.idAndTimeNodeSelectedEpidemiology.split(" ");
            frame.netLayoutInlineNew.infectionDynamics(nodeSelected[0], Integer.parseInt(nodeSelected[1]),Integer.parseInt(trTextField.getText()),Double.parseDouble(pTextField1.getText()),Integer.parseInt(seedTextField.getText()),changeNodeOrdering.isSelected(),modelInfection.getSelectedItem().toString(),Double.parseDouble(lossImmunityTextField.getText()));
            epidemiologyRunned = true;
            highlightInfection.setEnabled(true);
        }
    }//GEN-LAST:event_runRandomWalkerActionPerformed

    private void pTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pTextField1ActionPerformed

    private void highlightInfectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightInfectionActionPerformed
        if(epidemiologyRunned && frame.idAndTimeNodeSelectedEpidemiology != null)
            frame.netLayoutInlineNew.infectionDynamicsChangeVisualization();
        else
            highlightInfection.setEnabled(false);
    }//GEN-LAST:event_highlightInfectionActionPerformed

    private void modelInfectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelInfectionActionPerformed
        
    }//GEN-LAST:event_modelInfectionActionPerformed

    
    
    public void display() {
        this.pack();
        this.setLocation(frame.getWidth()/2 + this.getWidth()/2, frame.getHeight()/2 - this.getHeight()/2);
        this.setVisible(true);
    }
    
    private MainForm frame;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EpidemiologyProcessesPanel;
    private javax.swing.JCheckBox changeNodeOrdering;
    public javax.swing.JButton highlightInfection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lossImmunityTextField;
    private javax.swing.JComboBox<String> modelInfection;
    private javax.swing.JTextField pTextField1;
    private javax.swing.JButton runRandomWalker;
    private javax.swing.JTextField seedTextField;
    private javax.swing.JTextField trTextField;
    // End of variables declaration//GEN-END:variables

}