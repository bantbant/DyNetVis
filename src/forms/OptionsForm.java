/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (c) 2014-2019 Bruno Augusto Nassif Travencolo.
 * All Rights Reserved.
 *
 * This file is part of DyNetVis Project (DyNetVis).
 *
 * How to cite this software:
 *  
@inproceedings{Linhares:2017:DSV:3019612.3019686,
 author = {Linhares, Claudio D. G. and Traven\c{c}olo, Bruno A. N. and Paiva, Jose Gustavo S. and Rocha, Luis E. C.},
 title = {DyNetVis: A System for Visualization of Dynamic Networks},
 booktitle = {Proceedings of the Symposium on Applied Computing},
 series = {SAC '17},
 year = {2017},
 isbn = {978-1-4503-4486-9},
 location = {Marrakech, Morocco},
 pages = {187--194},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/3019612.3019686},
 doi = {10.1145/3019612.3019686},
 acmid = {3019686},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {complex networks, dynamic graph visualization, dynamic networks, recurrent neighbors, temporal activity map},
} 
 *  
 * DyNetVis is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * DyNetVis is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 *
 * This code was developed by members of Lab of Complex Network Visualization at 
 * Federal University of Uberlândia, Brazil - (https://sites.google.com/view/dynetvis/team?authuser=0). 
 * The initial developer of the original code is Claudio D. G. Linhares <claudiodgl@gmail.com>.
 *
 * Contributor(s): Jean R. Ponciano -- jeanrobertop@gmail.com, Luis E. C. Rocha -- luis.rocha@ugent.be, 
 * José Gustavo S. Paiva -- gustavo@ufu.br, Bruno A. N. Travençolo -- travencolo@gmail.com
 *
 * You should have received a copy of the GNU General Public License along 
 * with DyNetVis. If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */

package forms;

import java.awt.Color;

/**
 *
 * @author Claudio Linhares
 */
public class OptionsForm extends javax.swing.JDialog {

    protected OptionsForm(java.awt.Frame parent) {
        super(parent);
        initComponents();
        viewer = (MainForm)parent;
        
        this.getContentPane().setBackground(new Color(204,204,204));
        this.setBackground(new Color(204,204,204));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        renderQualitybuttonGroup = new javax.swing.ButtonGroup();
        drawButtonGroup = new javax.swing.ButtonGroup();
        qualityPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        poorRadioButton = new javax.swing.JRadioButton();
        highRadioButton1 = new javax.swing.JRadioButton();
        highRadioButton = new javax.swing.JRadioButton();
        buttonPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Projection Options");
        setBackground(new java.awt.Color(204, 204, 204));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(350, 145));
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        qualityPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        qualityPanel.setPreferredSize(new java.awt.Dimension(300, 50));

        jLabel1.setText("Select Quality:");
        jLabel1.setPreferredSize(new java.awt.Dimension(280, 14));
        qualityPanel.add(jLabel1);

        renderQualitybuttonGroup.add(poorRadioButton);
        poorRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        poorRadioButton.setLabel("Poor quality");
        poorRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poorRadioButtonActionPerformed(evt);
            }
        });
        qualityPanel.add(poorRadioButton);

        renderQualitybuttonGroup.add(highRadioButton1);
        highRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        highRadioButton1.setLabel("Medium quality");
        highRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highRadioButton1ActionPerformed(evt);
            }
        });
        qualityPanel.add(highRadioButton1);

        renderQualitybuttonGroup.add(highRadioButton);
        highRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        highRadioButton.setLabel("High quality");
        highRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highRadioButtonActionPerformed(evt);
            }
        });
        qualityPanel.add(highRadioButton);

        getContentPane().add(qualityPanel);

        buttonPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonPanel.setPreferredSize(new java.awt.Dimension(300, 37));

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(closeButton);

        getContentPane().add(buttonPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.viewer = null;
        this.setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void poorRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poorRadioButtonActionPerformed
        if (viewer != null) {
            viewer.setHighQualityRender(3);
        }
    }//GEN-LAST:event_poorRadioButtonActionPerformed

    private void highRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highRadioButtonActionPerformed
        if (viewer != null) {
            viewer.setHighQualityRender(1);
        }
    }//GEN-LAST:event_highRadioButtonActionPerformed

    private void highRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highRadioButton1ActionPerformed
        if (viewer != null) {
            viewer.setHighQualityRender(2);
        }
    }//GEN-LAST:event_highRadioButton1ActionPerformed

    public static OptionsForm getInstance(javax.swing.JFrame parent) {
        return new OptionsForm(parent);
    }

    public void display(MainForm viewer) {
        if (viewer != null) {
            if (viewer.isHighQualityRender() == 1) {
                highRadioButton.setSelected(true);
                highRadioButton1.setSelected(false);
                poorRadioButton.setSelected(false);
            } 
            else if (viewer.isHighQualityRender() == 2) {
                highRadioButton.setSelected(false);
                highRadioButton1.setSelected(true);
                poorRadioButton.setSelected(false);
            }
            else {
                highRadioButton.setSelected(false);
                highRadioButton1.setSelected(false);
                poorRadioButton.setSelected(true);
            }
        }
        this.viewer = viewer;
        pack();
        setLocationRelativeTo(this.getParent());
        setVisible(true);
    }
    
    private MainForm viewer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.ButtonGroup drawButtonGroup;
    private javax.swing.JRadioButton highRadioButton;
    private javax.swing.JRadioButton highRadioButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton poorRadioButton;
    private javax.swing.JPanel qualityPanel;
    private javax.swing.ButtonGroup renderQualitybuttonGroup;
    // End of variables declaration//GEN-END:variables
}
